@layer theme, reset, default, component, utility, animation;

@font-face {
  font-family: DMMono;
  src: url("/DMMono-Regular.woff2") format("woff2");
}

@layer theme {
  :root {
    --background-color: rgb(255 192 203 / 100%);
    --text-color: rgb(0 0 0 / 90%);
    --primary-color: rgb(140 31 98);
    --secondary-color: rgb(123 84 129);
    --brand-gradient: linear-gradient(to right, var(--primary-color), var(--secondary-color));
    --display-light-icon: block;
    --display-dark-icon: none;
    --step-0: clamp(0.75rem, calc(0.53rem + 1vw), 1.5rem);
    --step-1: clamp(0.94rem, calc(0.63rem + 1.42vw), 2rem);
    --step-2: clamp(1.17rem, calc(0.74rem + 1.99vw), 2.67rem);
    --step-3: clamp(1.47rem, calc(0.86rem + 2.78vw), 3.55rem);
    --step-4: clamp(1.83rem, calc(0.98rem + 3.87vw), 4.74rem);
    --list-gap: clamp(1rem, 4vw, 2rem);
    --transition-speed: 0.2s;
    --transition-speed-slow: calc(var(--transition-speed) * 2);
    --transition-timing: ease-out;
  }

  :root.dark-mode {
    --background-color: rgb(0 0 0 / 90%);
    --text-color: rgb(255 192 203 / 100%);
    --primary-color: rgb(123 84 129);
    --secondary-color: rgb(140 31 98);
    --display-light-icon: none;
    --display-dark-icon: block;
  }
}

@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  * {
    padding: 0;
    margin: 0;
  }

  ::selection {
    background: var(--text-color);
    color: var(--background-color);
  }

  html {
    height: 100dvh;
  }

  body {
    line-height: 1.75;
    font-size: var(--step-0);
    padding-block: 2rem;
    padding-inline: 1.5rem;
    margin: 0 auto;
    font-family: DMMono, monospace;
    color: var(--text-color);
    background-color: var(--background-color);
  }

  :is(img, picture, video, iframe, svg) {
    max-width: 100%;
    display: block;
  }

  img {
    object-fit: cover;
  }

  button {
    color: currentcolor;
  }

  :is(h1, h2, h3, h4, h5, h6, dl, dt, blockquote) {
    line-height: 1.3;
  }

  :is(input, button, textarea, select) {
    font: inherit;
    border: none;
    background-color: transparent;
    cursor: pointer;
  }

  @media (prefers-reduced-motion) {
    html:focus-within {
      scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
}

@layer default {
  :is(main, body, section) > * + * {
    margin-block-start: var(--flow-space, 2em);
  }

  :is(h1, h2, h3, blockquote) {
    --flow-space: 1em;
  }

  :is(h1, h2, h3) + * {
    --flow-space: 0.5em;
  }

  main {
    max-width: 60ch;
    opacity: 0;
    animation: fade-in var(--transition-speed-slow) var(--transition-timing) forwards;
  }

  a {
    color: var(--primary-color);
    font-weight: 700;
    text-underline-offset: clamp(4px, 1vw, 8px);
  }

  svg {
    fill: var(--text-color);
    transition: scale var(--transition-speed-slow) var(--transition-timing);
    width: var(--step-4);
  }

  svg:hover {
    scale: 1.2;
    transition-duration: var(--transition-speed);
  }

  svg:active {
    scale: 1.1;
  }

  ul {
    list-style-position: inside;
  }

  *:focus-visible {
    outline: 2px dashed var(--text-color);
    outline-offset: 0.25rem;
    border-radius: 3px;
    text-decoration: none;
  }
}

@layer component {
  .icon-list {
    display: flex;
    gap: var(--list-gap);
    list-style: none;
  }

  .icon-list-link {
    display: inline-block;
  }

  .icon-foreground {
    fill: var(--text-color);
  }

  .icon-background {
    fill: var(--background-color);
  }

  .light-icon {
    display: var(--display-light-icon);
  }

  .dark-icon {
    display: var(--display-dark-icon);
  }

  .theme-button {
    position: fixed;
    top: 2rem;
    right: 1rem;
    width: var(--step-2);
    fill: var(--text-color);
  }

  .four-oh-four {
    max-width: none;
    text-align: center;
  }

  .nav {
    --nav-item-width: 3rem;
    --nav-item-width-lg: 5rem;
    --blob-offset: 25%;
    --nav-translate-3: 12rem;

    position: relative;
  }

  .nav-link {
    display: block;
    color: var(--text-color);
  }

  .nav-item {
    display: inline-block;
    text-align: center;
  }

  .nav-item:not(:last-of-type) {
    margin-inline-end: 2rem;
  }

  .nav-item:first-of-type {
    width: var(--nav-item-width);
  }

  .nav-item:nth-of-type(2) {
    width: var(--nav-item-width-lg);
  }

  .nav-item:last-of-type {
    width: var(--nav-item-width-lg);
  }

  .nav-overlay-link {
    display: none;
  }

  @supports (selector(:has(*))) {
    /* stylelint-disable */
    .nav-blob {
      pointer-events: none;
      position: absolute;
      top: -25%;
      overflow: hidden;
      height: 150%;
      width: var(--nav-item-width);
      border-radius: 4px;
      background: var(--text-color);
      white-space: nowrap;
      transition:
        width var(--transition-speed) var(--transition-timing),
        translate var(--transition-speed) var(--transition-timing);
    }

    .nav:has(.nav-item:first-of-type:hover) > .nav-blob {
      width: var(--nav-item-width);
      translate: 0;
    }

    .nav-bio > .nav-blob,
    .nav:has(.nav-item:nth-of-type(2):hover) > .nav-blob {
      width: var(--nav-item-width-lg);
      translate: var(--nav-item-width-lg);
    }

    .nav-uses > .nav-blob,
    .nav:has(.nav-item:last-of-type:hover) > .nav-blob {
      width: var(--nav-item-width-lg);
      translate: var(--nav-translate-3);
    }

    .nav:has(.nav-item:first-of-type:hover) > .nav-blob > .nav-overlay-items,
    .nav-overlay-items {
      transition: translate var(--transition-speed) var(--transition-timing);
      translate: 0 var(--blob-offset);
    }

    .nav-bio .nav-overlay-items,
    .nav:has(.nav-item:nth-of-type(2):hover) > .nav-blob > .nav-overlay-items {
      translate: calc(var(--nav-item-width-lg) * -1) var(--blob-offset);
    }

    .nav-uses .nav-overlay-items,
    .nav:has(.nav-item:last-of-type:hover) > .nav-blob > .nav-overlay-items {
      translate: calc(var(--nav-translate-3) * -1) var(--blob-offset);
    }

    .nav-overlay-link {
      display: block;
      color: var(--background-color);
      font-weight: 600;
      outline-color: var(--background-color);
    }
    /* stylelint-enable */
  }

  .name {
    font-weight: 700;
    text-decoration: none;
    font-size: var(--step-2);
    background-image: var(--brand-gradient);
    background-clip: text;
    color: transparent;
    position: relative;
    line-height: 2.5;
  }

  .name:not(:focus)::after {
    content: "";
    position: absolute;
    bottom: -0.5rem;
    left: 0;
    width: 100%;
    border-style: solid;
    border-image: var(--brand-gradient);
    border-image-slice: 100%;
    border-image-slice: 1;
    scale: 0;
    transform-origin: bottom left;
    animation: underline 1s;
    animation-fill-mode: forwards;
    animation-delay: 1s;
  }

  .corner-wobbles {
    animation: gradient-wobble 5s infinite;
    position: fixed;
    bottom: 0;
    right: 0;
    width: 350px;
    height: 350px;
    rotate: 45deg;
    translate: 50% 50%;
    background-image:
      repeating-linear-gradient(
        to right,
        var(--text-color),
        var(--text-color) 5px,
        transparent 5px,
        transparent 10px
      );
  }
}

@layer utility {
  .line-through {
    text-decoration: line-through;
  }
}

@layer animation {
  @keyframes fade-in {
    100% {
      opacity: 1;
    }
  }

  @keyframes underline {
    to {
      scale: 1;
    }
  }

  @keyframes gradient-wobble {
    0% {
      background-position: 0 0;
    }

    100% {
      background-position: -100px 0;
    }
  }
}

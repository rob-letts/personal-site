---
const astroPages = await Astro.glob("../pages/*.astro");

function getName(filePath: string, sequenceToRemove: string) {
  return filePath.split("/").at(-1)?.replace(sequenceToRemove, "");
}

const navItems = [
  "/",
  ...astroPages.map(page => getName(page.file, ".astro"))
    .filter(item => item !== "index" && !item?.startsWith("_"))
];

const pathName = Astro.url.pathname;
---
<script>
const navItems = document.querySelectorAll(".nav-item");
const currentItem = document.querySelector(".nav-item-active") as HTMLElement;
const blob = document.querySelector(".nav-blob") as HTMLElement;
const nav = document.querySelector(".nav") as HTMLElement;
const blobOffset = 32;

updateNavBlob(currentItem, true);

navItems.forEach(item => {
  item.addEventListener("mouseenter", (event) => {
    const eventTarget = event.target as HTMLElement;

    if (eventTarget !== currentItem) {
      currentItem.classList.remove("nav-item-active");
    }

    updateNav(eventTarget);
  });
})

window.addEventListener("resize", () => {
  updateNav(currentItem);
});

nav.addEventListener("mouseleave", () => {
  updateNav(currentItem);
});

function updateNav (target: HTMLElement) {
  updateNavItems(target);
  updateNavBlob(target);
}

function updateNavBlob (target: HTMLElement, first = false) {
  const navLeft = nav?.getBoundingClientRect().left;
  const currentLeft = currentItem?.getBoundingClientRect().left;
  const { width, left: targetLeft } = target.getBoundingClientRect();

  blob.style.width = `${width + blobOffset}px`;

  if (first) {
    blob.style.left = `${targetLeft - navLeft - blobOffset / 2}px`;
  } else {
    blob.style.translate = `${targetLeft - currentLeft}px`;
  }
}

function updateNavItems (target: HTMLElement) {
  navItems.forEach(item => {
    item.classList.remove("nav-item-active");
  })
  target.classList.add("nav-item-active");
}
</script>

<nav class="nav">
  <div class="nav-blob" />
  <ul class="nav-items">
    {navItems.map((item) => (
      <li class={`nav-item ${[`/${item}`, item].includes(pathName) ? "nav-item-active" : ""}`}>
        <a href={item} class="nav-link">
          {item}
        </a>
      </li>
    ))}
  </ul>
</nav>